
.. _program_listing_file_src_cpp_model_sampling_AncestralSampler.h:

Program Listing for File AncestralSampler.h
===========================================

|exhale_lsh| :ref:`Return to documentation for file <file_src_cpp_model_sampling_AncestralSampler.h>` (``src/cpp/model/sampling/AncestralSampler.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include "model/sampling/Sampler.h"
   
   #include "model/utils/Definitions.h"
   
   namespace tomcat {
       namespace model {
   
           class Sampler;
   
           class AncestralSampler : public Sampler {
             public:
               //------------------------------------------------------------------
               // Constructors & Destructor
               //------------------------------------------------------------------
   
               AncestralSampler(std::shared_ptr<DynamicBayesNet> model);
   
               ~AncestralSampler();
   
               //------------------------------------------------------------------
               // Copy & Move constructors/assignments
               //------------------------------------------------------------------
               AncestralSampler(const AncestralSampler& sampler);
   
               AncestralSampler& operator=(const AncestralSampler& sampler);
   
               AncestralSampler(AncestralSampler&&) = default;
   
               AncestralSampler& operator=(AncestralSampler&&) = default;
   
               //------------------------------------------------------------------
               // Member functions
               //------------------------------------------------------------------
               void sample_latent(std::shared_ptr<gsl_rng> random_generator,
                                  int num_samples) override;
   
               void get_info(nlohmann::json& json) const override;
   
               //------------------------------------------------------------------
               // Getters & Setters
               //------------------------------------------------------------------
               void set_equal_samples_time_step_limit(
                   int equal_samples_time_step_limit);
   
             private:
               //------------------------------------------------------------------
               // Data members
               //------------------------------------------------------------------
   
               // If set, samples up to this time will be the same for all the
               // samples generated. Starting from the next time step, samples will
               // be able to diverge according to a regular ancestral sampling
               // process.
               int equal_samples_time_step_limit = -1;
           };
       } // namespace model
   } // namespace tomcat
