
.. _program_listing_file_src_cpp_model_pipeline_estimation_OfflineEstimation.h:

Program Listing for File OfflineEstimation.h
============================================

|exhale_lsh| :ref:`Return to documentation for file <file_src_cpp_model_pipeline_estimation_OfflineEstimation.h>` (``src/cpp/model/pipeline/estimation/OfflineEstimation.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include "utils/Definitions.h"
   
   #include "pipeline/estimation/EstimationProcess.h"
   
   namespace tomcat {
       namespace model {
   
           class OfflineEstimation : public EstimationProcess {
             public:
               //------------------------------------------------------------------
               // Constructors & Destructor
               //------------------------------------------------------------------
   
               OfflineEstimation();
   
               ~OfflineEstimation();
   
               //------------------------------------------------------------------
               // Copy & Move constructors/assignments
               //------------------------------------------------------------------
               OfflineEstimation(const OfflineEstimation& estimation);
   
               OfflineEstimation& operator=(const OfflineEstimation& estimation);
   
               OfflineEstimation(OfflineEstimation&&) = default;
   
               OfflineEstimation& operator=(OfflineEstimation&&) = default;
   
               //------------------------------------------------------------------
               // Member functions
               //------------------------------------------------------------------
               void estimate(const EvidenceSet& test_data) override;
   
               void get_info(nlohmann::json& json) const override;
   
             private:
               //------------------------------------------------------------------
               // Member functions
               //------------------------------------------------------------------
   
               void
               run_estimation_thread(std::shared_ptr<Estimator> estimator,
                                     const EvidenceSet& test_data);
           };
   
       } // namespace model
   } // namespace tomcat
