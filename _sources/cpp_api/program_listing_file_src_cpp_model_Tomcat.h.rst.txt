
.. _program_listing_file_src_cpp_model_Tomcat.h:

Program Listing for File Tomcat.h
=================================

|exhale_lsh| :ref:`Return to documentation for file <file_src_cpp_model_Tomcat.h>` (``src/cpp/model/Tomcat.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include <memory>
   #include <string>
   
   #include <gsl/gsl_rng.h>
   
   #include "model/pgm/DynamicBayesNet.h"
   #include "model/utils/Definitions.h"
   
   namespace tomcat {
       namespace model {
   
           class Tomcat {
             public:
               //------------------------------------------------------------------
               // Types, Enums & Constants
               //------------------------------------------------------------------
   
               // Node labels
               inline static const std::string THETA_S = "Theta_S";
               inline static const std::string PI_RM = "Pi_RM";
               inline static const std::string PI_SG = "Pi_SG";
               inline static const std::string PI_SY = "Pi_SY";
               inline static const std::string STATE = "State";
               inline static const std::string ROOM = "Room";
               inline static const std::string SG = "Green";
               inline static const std::string SY = "Yellow";
   
               //------------------------------------------------------------------
               // Constructors & Destructor
               //------------------------------------------------------------------
   
               Tomcat();
   
               ~Tomcat();
   
               //------------------------------------------------------------------
               // Copy & Move constructors/assignments
               //------------------------------------------------------------------
               Tomcat(const Tomcat&) = default;
   
               Tomcat& operator=(const Tomcat&) = default;
   
               Tomcat(Tomcat&&) = default;
   
               Tomcat& operator=(Tomcat&&) = default;
   
               //------------------------------------------------------------------
               // Member functions
               //------------------------------------------------------------------
   
               void init_ta3_learnable_model();
   
               void
               generate_synthetic_data(std::shared_ptr<gsl_rng> random_generator,
                                       int num_samples,
                                       const std::string& output_folder,
                                       int equal_until = -1);
   
               //------------------------------------------------------------------
               // Getters & Setters
               //------------------------------------------------------------------
               const std::shared_ptr<DynamicBayesNet>& get_model() const;
   
             private:
               //------------------------------------------------------------------
               // Data members
               //------------------------------------------------------------------
               std::shared_ptr<DynamicBayesNet> model;
           };
   
       } // namespace model
   } // namespace tomcat
