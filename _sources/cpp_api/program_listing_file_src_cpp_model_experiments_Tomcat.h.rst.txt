
.. _program_listing_file_src_cpp_model_experiments_Tomcat.h:

Program Listing for File Tomcat.h
=================================

|exhale_lsh| :ref:`Return to documentation for file <file_src_cpp_model_experiments_Tomcat.h>` (``src/cpp/model/experiments/Tomcat.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include <memory>
   #include <string>
   #include <unordered_map>
   #include <unordered_set>
   #include <vector>
   
   #include <gsl/gsl_rng.h>
   
   #include "pgm/DynamicBayesNet.h"
   #include "pgm/NodeMetadata.h"
   #include "utils/Definitions.h"
   
   namespace tomcat {
       namespace model {
   
           class Tomcat {
             public:
               //------------------------------------------------------------------
               // Constructors & Destructor
               //------------------------------------------------------------------
   
               Tomcat();
   
               ~Tomcat();
   
               //------------------------------------------------------------------
               // Copy & Move constructors/assignments
               //------------------------------------------------------------------
   
               // Copy constructor and assignment should be deleted to avoid
               // implicit slicing and loss of polymorphic behaviour in the
               // subclasses. To deep copy, the clone method must be used.
               Tomcat(const Tomcat&) = delete;
   
               Tomcat& operator=(const Tomcat&) = delete;
   
               Tomcat(Tomcat&&) = default;
   
               Tomcat& operator=(Tomcat&&) = default;
   
               //------------------------------------------------------------------
               // Pure virtual functions
               //------------------------------------------------------------------
   
               virtual void init() = 0;
   
               //------------------------------------------------------------------
               // Member functions
               //------------------------------------------------------------------
   
               void
               generate_synthetic_data(std::shared_ptr<gsl_rng> random_generator,
                                       int num_samples,
                                       const std::string& output_folder,
                                       int equal_until = -1,
                                       int max_time_step = -1,
                                       std::unordered_set<std::string> excluding = {});
   
               //------------------------------------------------------------------
               // Getters & Setters
               //------------------------------------------------------------------
               const std::shared_ptr<DynamicBayesNet>& get_model() const;
   
             protected:
               //------------------------------------------------------------------
               // Member functions
               //------------------------------------------------------------------
   
               /*
                * Copies the data members from another ToMCAT's instance
                */
               void copy_tomcat(const Tomcat& tomcat);
   
               std::shared_ptr<RandomVariableNode>
               create_node(std::shared_ptr<NodeMetadata> metadata,
                           std::vector<std::shared_ptr<CPD>> cpds) const;
   
               //------------------------------------------------------------------
               // Data members
               //------------------------------------------------------------------
               std::shared_ptr<DynamicBayesNet> model;
           };
   
       } // namespace model
   } // namespace tomcat
