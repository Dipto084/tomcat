
.. _program_listing_file_src_cpp_model_pipeline_training_DBNSamplingTrainer.h:

Program Listing for File DBNSamplingTrainer.h
=============================================

|exhale_lsh| :ref:`Return to documentation for file <file_src_cpp_model_pipeline_training_DBNSamplingTrainer.h>` (``src/cpp/model/pipeline/training/DBNSamplingTrainer.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include "DBNTrainer.h"
   
   #include "utils/Definitions.h"
   #include "sampling/Sampler.h"
   
   namespace tomcat {
       namespace model {
   
           class DBNSamplingTrainer : public DBNTrainer {
             public: // same pattern for protected and private in this order
               //------------------------------------------------------------------
               // Constructors & Destructor
               //------------------------------------------------------------------
               DBNSamplingTrainer(std::shared_ptr<gsl_rng> random_generator,
                                  std::shared_ptr<Sampler> sampler,
                                  int num_samples);
   
               ~DBNSamplingTrainer();
   
               //------------------------------------------------------------------
               // Copy & Move constructors/assignments
               //------------------------------------------------------------------
               DBNSamplingTrainer(const DBNSamplingTrainer& trainer);
   
               DBNSamplingTrainer& operator=(const DBNSamplingTrainer& trainer);
   
               DBNSamplingTrainer(DBNSamplingTrainer&&) = default;
   
               DBNSamplingTrainer& operator=(DBNSamplingTrainer&&) = default;
   
               //------------------------------------------------------------------
               // Member functions
               //------------------------------------------------------------------
               void prepare() override;
   
               void fit(const EvidenceSet& training_data) override;
   
               void get_info(nlohmann::json& json) const override;
   
             private:
               //------------------------------------------------------------------
               // Member functions
               //------------------------------------------------------------------
   
               void copy_trainer(const DBNSamplingTrainer& trainer);
   
               //------------------------------------------------------------------
               // Data members
               //------------------------------------------------------------------
               std::shared_ptr<gsl_rng> random_generator;
   
               std::shared_ptr<Sampler> sampler;
   
               int num_samples;
           };
   
       } // namespace model
   } // namespace tomcat
