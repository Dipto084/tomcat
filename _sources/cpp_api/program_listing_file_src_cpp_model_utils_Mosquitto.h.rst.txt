
.. _program_listing_file_src_cpp_model_utils_Mosquitto.h:

Program Listing for File Mosquitto.h
====================================

|exhale_lsh| :ref:`Return to documentation for file <file_src_cpp_model_utils_Mosquitto.h>` (``src/cpp/model/utils/Mosquitto.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #pragma once
   
   #include <chrono>
   #include <sstream>
   #include <string>
   
   #include <mosquitto.h>
   
   #include "Definitions.h"
   
   class Mosquitto {
     public:
       //------------------------------------------------------------------
       // Types, Enums & Constants
       //------------------------------------------------------------------
       typedef std::chrono::steady_clock::time_point Time;
   
       //--------------------------------------------------------------------------
       // Constructors & Destructor
       //--------------------------------------------------------------------------
   
       Mosquitto();
   
       virtual ~Mosquitto();
   
       //--------------------------------------------------------------------------
       // Copy & Move constructors/assignments
       //--------------------------------------------------------------------------
       Mosquitto(const Mosquitto& mosquitto);
   
       Mosquitto& operator=(const Mosquitto& mosquitto);
   
       Mosquitto(Mosquitto&&) = default;
   
       Mosquitto& operator=(Mosquitto&&) = default;
   
       //--------------------------------------------------------------------------
       // Member functions
       //--------------------------------------------------------------------------
   
       void connect(const std::string& address, int port, int alive_delay);
   
       void subscribe(const std::string& topic);
   
       void publish(const std::string& topic, const std::string& message);
   
       void loop(const bool try_reconnect = true);
   
       void close();
   
       //--------------------------------------------------------------------------
       // Getters & Setters
       //--------------------------------------------------------------------------
       void set_max_seconds_without_messages(long max_seconds_without_messages);
   
     protected:
       //--------------------------------------------------------------------------
       // Virtual functions
       //--------------------------------------------------------------------------
   
       void copy_wrapper(const Mosquitto& mosquitto);
   
       virtual void on_connected();
   
       virtual void on_error(const std::string& error_message);
   
       virtual void on_message(const std::string& topic,
                               const std::string& message);
   
       virtual void on_time_out();
   
       //--------------------------------------------------------------------------
       // Data members
       //--------------------------------------------------------------------------
       volatile bool running;
   
     private:
       //--------------------------------------------------------------------------
       // Static functions
       //--------------------------------------------------------------------------
   
       static void mosquitto_callback_on_connect(struct mosquitto* mqtt_client,
                                                 void* wrapper_instance,
                                                 int error_code);
   
       static void
       mosquitto_callback_on_message(struct mosquitto* mqtt_client,
                                     void* wrapper_instance,
                                     const struct mosquitto_message* message);
   
       //--------------------------------------------------------------------------
       // Member functions
       //--------------------------------------------------------------------------
   
       bool time_out() const;
   
       //--------------------------------------------------------------------------
       // Data members
       //--------------------------------------------------------------------------
       struct mosquitto* mqtt_client;
   
       // Time at the last time a message arrived.
       Time last_updated_time;
   
       long max_seconds_without_messages;
   };
