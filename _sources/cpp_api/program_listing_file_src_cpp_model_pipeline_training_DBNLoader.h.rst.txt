
.. _program_listing_file_src_cpp_model_pipeline_training_DBNLoader.h:

Program Listing for File DBNLoader.h
====================================

|exhale_lsh| :ref:`Return to documentation for file <file_src_cpp_model_pipeline_training_DBNLoader.h>` (``src/cpp/model/pipeline/training/DBNLoader.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include <memory>
   #include <string>
   
   #include "DBNTrainer.h"
   
   #include "model/utils/Definitions.h"
   #include "model/pgm/DynamicBayesNet.h"
   
   namespace tomcat {
       namespace model {
   
           class DBNLoader : public DBNTrainer {
             public:
               //------------------------------------------------------------------
               // Constructors & Destructor
               //------------------------------------------------------------------
   
               DBNLoader(std::shared_ptr<DynamicBayesNet> model,
                         std::string input_folder_path);
   
               ~DBNLoader();
   
               //------------------------------------------------------------------
               // Copy & Move constructors/assignments
               //------------------------------------------------------------------
               DBNLoader(const DBNLoader& loader);
   
               DBNLoader& operator=(const DBNLoader& loader);
   
               DBNLoader(DBNLoader&&) = default;
   
               DBNLoader& operator=(DBNLoader&&) = default;
   
               //------------------------------------------------------------------
               // Member functions
               //------------------------------------------------------------------
               void prepare() override;
   
               void fit(const EvidenceSet& training_data) override;
   
               void get_info(nlohmann::json& json) const override;
   
             private:
               //------------------------------------------------------------------
               // Member functions
               //------------------------------------------------------------------
   
               void copy_loader(const DBNLoader& loader);
   
               //------------------------------------------------------------------
               // Data members
               //------------------------------------------------------------------
               std::shared_ptr<DynamicBayesNet> model;
   
               // Folder where the model's parameters' files are saved.
               std::string input_folder_path;
   
               // Cross validation step. This is incremented at each call of the
               // function fit. It can be used to identify a folder with parameters
               // for a specific cross validation step.
               int cv_step = 0;
           };
   
       } // namespace model
   } // namespace tomcat
