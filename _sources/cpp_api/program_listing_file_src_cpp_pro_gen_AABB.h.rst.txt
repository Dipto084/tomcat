
.. _program_listing_file_src_cpp_pro_gen_AABB.h:

Program Listing for File AABB.h
===============================

|exhale_lsh| :ref:`Return to documentation for file <file_src_cpp_pro_gen_AABB.h>` (``src/cpp/pro_gen/AABB.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #pragma once
   
   #include "Block.h"
   #include <boost/random/mersenne_twister.hpp>
   #include <boost/random/uniform_int_distribution.hpp>
   #include <string>
   #include <vector>
   
   class AABB {
   
     private:
       int id;
       std::string material;
       std::string type;
       Pos topLeft;
       Pos bottomRight;
       bool isHollow;
       bool hasRoof;
       std::vector<Block> blockList;
   
     public:
       int getID();
       std::string getMaterial();
       std::string getType();
       Pos getTopLeft();
       Pos getBottomRight();
       std::vector<Block>* getBlockList();
       int getMidpointX();
       int getMidpointY();
       int getMidpointZ();
       Pos getRandomPosAtBase(boost::random::mt19937*,
                              int offsetPosX = 1,
                              int offsetNegX = 1,
                              int offsetPosZ = 1,
                              int offsetNegZ = 1);
       std::vector<Pos> getEdgeMidpointAtBase();
       void setTopLeft(Pos*);
       void setBottomRight(Pos*);
       void addBlock(Block*);
       bool isOverlapping(AABB *);
       void generateBox(std::string,
                        int offsetPosX = 0,
                        int offsetNegX = 0,
                        int offsetPosY = 0,
                        int offsetNegY = 0,
                        int offsetPosZ = 0,
                        int offsetNegZ = 0,
                        std::string type = "normal");
       void addRandomBlocks(int,
                            std::string,
                            boost::random::mt19937*,
                            int offsetPosX = 0,
                            int offsetNegX = 0,
                            int offsetPosY = 0,
                            int offsetNegY = 0,
                            int offsetPosZ = 0,
                            int offsetNegZ = 0,
                            std::string type = "normal");
       std::string toTSV();
       AABB(int,
            std::string,
            std::string,
            Pos*,
            Pos*,
            bool isHollow = true,
            bool hasRoof = false);
       ~AABB();
   };
